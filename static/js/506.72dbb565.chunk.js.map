{"version":3,"file":"static/js/506.72dbb565.chunk.js","mappings":"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","sources":["components/loading/LoadingSkeleton.js","components/movies/MovieCard.jsx","pages/MovieDetailsPage.jsx","../node_modules/react-error-boundary/dist/react-error-boundary.esm.js"],"sourcesContent":["import React from \"react\";\n\nconst LoadingSkeleton = (props) => {\n  return (\n    <div\n      className={`skeleton ${props.className}`}\n      style={{\n        height: props.height,\n        width: props.width || \"100%\",\n        borderRadius: props.radius,\n      }}\n    ></div>\n  );\n};\n\nexport default LoadingSkeleton;\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Button from \"../button/Button\";\nimport { tmdbAPI } from \"../../config\";\nimport PropTypes from \"prop-types\";\nimport { withErrorBoundary } from \"react-error-boundary\";\nimport LoadingSkeleton from \"components/loading/LoadingSkeleton\";\n\nconst MovieCard = ({ item }) => {\n  const { title, release_date, poster_path, vote_average, id } = item;\n  const navigate = useNavigate();\n  return (\n    <div className=\"movie-card flex flex-col rounded-lg p-3 bg-slate-800 text-white h-full\">\n      <img\n        src={tmdbAPI.image500(poster_path)}\n        alt=\"\"\n        className=\"w-full h-[250px] object-cover rounded-lg mb-4\"\n      />\n      <div className=\"flex flex-col flex-1\">\n        <h3 className=\" font-bold text-xl mb-3\">{title}</h3>\n        <div className=\"flex items-center justify-between opacity-50 text-sm mb-8\">\n          <span>{new Date(release_date).getFullYear()}</span>\n          <span>{vote_average}</span>\n        </div>\n      </div>\n      <Button bgColor=\"secondary\" onClick={() => navigate(`/movie/${id}`)}>\n        Watch Now\n      </Button>\n    </div>\n  );\n};\n\nMovieCard.propTypes = {\n  item: PropTypes.shape({\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n    poster_path: PropTypes.string,\n    vote_average: PropTypes.number,\n    id: PropTypes.number,\n  }),\n};\n\nfunction FallbackComponent() {\n  return (\n    <p className=\"text-red-400 bg-red-50\">\n      Some thing went wrong with your components\n    </p>\n  );\n}\n\nexport default withErrorBoundary(MovieCard, {\n  FallbackComponent,\n});\n\nexport const MovieCardSkeleton = () => {\n  return (\n    <div className=\"movie-card flex flex-col rounded-lg p-3 bg-slate-800 text-white h-full\">\n      <LoadingSkeleton\n        width=\"100%\"\n        height=\"250px\"\n        radios=\"8px\"\n        className=\"mb-5\"\n      ></LoadingSkeleton>\n      <div className=\"flex flex-col flex-1\">\n        <h3 className=\" font-bold text-xl mb-3\">\n          <LoadingSkeleton width=\"100%\" height=\"20px\"></LoadingSkeleton>\n        </h3>\n        <div className=\"flex items-center justify-between opacity-50 text-sm mb-8\">\n          <span>\n            <LoadingSkeleton width=\"50px\" height=\"20px\"></LoadingSkeleton>\n          </span>\n          <span>\n            <LoadingSkeleton width=\"30px\" height=\"20px\"></LoadingSkeleton>\n          </span>\n        </div>\n        <LoadingSkeleton\n          width=\"100%\"\n          height=\"45px\"\n          radius=\"6px\"\n        ></LoadingSkeleton>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useSWR from \"swr\";\nimport { fetcher, tmdbAPI } from \"../config\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport MovieCard from \"../components/movies/MovieCard\";\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const { data } = useSWR(tmdbAPI.getMovieDetails(movieId), fetcher);\n  if (!data) return null;\n  const { backdrop_path, poster_path, title, genres, overview } = data;\n  // console.log(\"🚀 ~ MovieDetailsPage ~ data:\", data);\n  return (\n    <div className=\"py-10\">\n      <div className=\"w-full h-[600px] relative \">\n        <div className=\"overlay inset-0 bg-black opacity-65 absolute\"></div>\n        <div\n          className=\"w-full h-full bg-cover bg-no-repeat\"\n          style={{\n            backgroundImage: `url(${tmdbAPI.imageOriginal(backdrop_path)})`,\n          }}\n        ></div>\n      </div>\n      <div className=\"w-full h-[400px] max-w-[800px] mx-auto\">\n        <img\n          src={tmdbAPI.imageOriginal(poster_path)}\n          alt=\"\"\n          className=\"w-full h-full object-cover rounded-xl -mt-[200px] relative z-10 pb-10 \"\n        />\n      </div>\n      <h1 className=\"text-white text-center font-bold text-4xl mb-10\">\n        {title}\n      </h1>\n      <div className=\"flex justify-center items-center gap-x-5 mb-10\">\n        {genres.length > 0 &&\n          genres.map((item) => (\n            <span\n              className=\"text-primary border border-primary px-4 py-2\"\n              key={item.id}\n            >\n              {item.name}\n            </span>\n          ))}\n      </div>\n      <div className=\"max-w-[700px] leading-relaxed text-center mx-auto mb-10\">\n        <p className=\"text-lg\">{overview}</p>\n      </div>\n      <MovieMeta type=\"credits\"></MovieMeta>\n      <MovieMeta type=\"videos\"></MovieMeta>\n      <MovieMeta type=\"similar\"></MovieMeta>\n      {/* <MovieCredits></MovieCredits>\n      <MovieVideos></MovieVideos>\n      <SimilarMovie></SimilarMovie> */}\n    </div>\n  );\n};\n\nfunction MovieMeta({ type = \"videos\" }) {\n  const { movieId } = useParams();\n  const { data } = useSWR(tmdbAPI.getMovieMeta(movieId, type), fetcher);\n  if (!data) return null;\n  if (type === \"credits\") {\n    const { cast } = data;\n    if (!cast || cast.length <= 0) return null;\n\n    return (\n      <div className=\"py-10\">\n        <h2 className=\"text-center text-3xl mb-10\">Casts</h2>\n        <div className=\"grid grid-cols-4 gap-5\">\n          {cast.slice(0, 4).map((item) => (\n            <div className=\"cast-item\" key={item.id}>\n              <img\n                src={tmdbAPI.imageOriginal(item.profile_path)}\n                className=\"w-full h-[350px] object-cover rounded-lg mb-3\"\n                alt=\"\"\n              />\n              <h3 className=\"text-xl font-medium\">{item.name}</h3>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  } else {\n    const { results } = data;\n    if (!results || results.length <= 0) return null;\n    if (type === \"videos\")\n      return (\n        <div className=\"py-10\">\n          <div className=\"flex flex-col gap-10\">\n            {results.slice(0, 2).map((item) => (\n              <div className=\"\" key={item.id}>\n                <h3 className=\"mb-5 text-xl font-medium p-3 bg-secondary inline-block\">\n                  {item.name}\n                </h3>\n                <div key={item.id} className=\"w-full aspect-video\">\n                  <iframe\n                    width=\"864\"\n                    height=\"486\"\n                    src={`https://www.youtube.com/embed/${item.key}`}\n                    title=\"YouTube video player\"\n                    frameBorder=\"0\"\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                    allowFullScreen\n                    className=\"w-full h-full object-fill\"\n                  ></iframe>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      );\n    if (type === \"similar\")\n      return (\n        <div className=\"py-10\">\n          <h2 className=\"text-3xl font-medium mb-10\">Similar movies</h2>\n          <div className=\"movie-list\">\n            <Swiper\n              grabCursor={\"true\"}\n              spaceBetween={40}\n              slidesPerView={\"auto\"}\n            >\n              {results.length > 0 &&\n                results.map((item) => (\n                  <SwiperSlide key={item.id}>\n                    <MovieCard item={item}></MovieCard>\n                  </SwiperSlide>\n                ))}\n            </Swiper>\n          </div>\n        </div>\n      );\n  }\n  return null;\n}\n\nconst MovieCredits = () => {\n  const { movieId } = useParams();\n  const { data } = useSWR(tmdbAPI.getMovieMeta(movieId, \"credits\"), fetcher);\n  if (!data) return null;\n  const { cast } = data;\n  if (!cast || cast.length <= 0) return null;\n  return (\n    <div className=\"py-10\">\n      <h2 className=\"text-3xl text-center mb-10 font-semibold\">Casts</h2>\n      <div className=\"grid grid-cols-4 gap-x-5\">\n        {cast.slice(0, 4).map((item) => (\n          <div className=\"card-item \" key={item.id}>\n            <img\n              src={tmdbAPI.imageOriginal(item.profile_path)}\n              alt=\"\"\n              className=\"w-full h-[350px] object-cover rounded-lg mb-3\"\n            />\n            <h3 className=\"text-center text-xl font-medium\">{item.name}</h3>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst MovieVideos = () => {\n  const { movieId } = useParams();\n  const { data } = useSWR(tmdbAPI.getMovieMeta(movieId, \"videos\"), fetcher);\n  if (!data) return null;\n  const { results } = data;\n  if (!results || results.length <= 0) return null;\n  // console.log(\"🚀 ~ MovieVideos ~ data:\", data);\n  return (\n    <div className=\"py-10\">\n      <div className=\"flex flex-col gap-y-10\">\n        {results.slice(0, 2).map((item) => (\n          <div className=\"\" key={item.id}>\n            <h3 className=\"mb-5 text-xl font-medium p-3 bg-secondary inline-block\">\n              {item.name}\n            </h3>\n            <div key={item.key} className=\"w-full aspect-video\">\n              <iframe\n                width=\"951\"\n                height=\"535\"\n                src={`https://www.youtube.com/embed/${item.key}`}\n                title=\" \"\n                frameBorder=\"0\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n                allowFullScreen\n                className=\"w-full h-full object-fill\"\n              ></iframe>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst SimilarMovie = () => {\n  const { movieId } = useParams();\n  const { data } = useSWR(tmdbAPI.getMovieMeta(movieId, \"similar \"), fetcher);\n  if (!data) return null;\n  console.log(\"🚀 ~ SimilarMovie ~ data:\", data);\n  const { results } = data;\n  if (!results || results.length <= 0) return null;\n  return (\n    <div className=\"py-10\">\n      <h2 className=\"text-3xl font-medium mb-10 text-center\">Similar Movies</h2>\n      <div className=\"movie-list\">\n        <Swiper grabCursor={\"true\"} spaceBetween={40} slidesPerView={\"auto\"}>\n          {results.map((item) => (\n            <SwiperSlide key={item.id}>\n              <MovieCard item={item}></MovieCard>\n            </SwiperSlide>\n          ))}\n        </Swiper>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n\n// <iframe width=\"951\" height=\"535\" src=\"https://www.youtube.com/embed/ZcGf17AOb0M\" title=\"𝐏𝐥𝐚𝐲𝐥𝐢𝐬𝐭 nên nghe khi mùa đông sắp tới !!! Vì chúng ta bây giờ hai lối rồi...\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen></iframe>\n","'use client';\nimport { createContext, Component, createElement, useContext, useState, useMemo, forwardRef } from 'react';\n\nconst ErrorBoundaryContext = createContext(null);\n\nconst initialState = {\n  didCatch: false,\n  error: null\n};\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.resetErrorBoundary = this.resetErrorBoundary.bind(this);\n    this.state = initialState;\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      didCatch: true,\n      error\n    };\n  }\n  resetErrorBoundary() {\n    const {\n      error\n    } = this.state;\n    if (error !== null) {\n      var _this$props$onReset, _this$props;\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      (_this$props$onReset = (_this$props = this.props).onReset) === null || _this$props$onReset === void 0 ? void 0 : _this$props$onReset.call(_this$props, {\n        args,\n        reason: \"imperative-api\"\n      });\n      this.setState(initialState);\n    }\n  }\n  componentDidCatch(error, info) {\n    var _this$props$onError, _this$props2;\n    (_this$props$onError = (_this$props2 = this.props).onError) === null || _this$props$onError === void 0 ? void 0 : _this$props$onError.call(_this$props2, error, info);\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      didCatch\n    } = this.state;\n    const {\n      resetKeys\n    } = this.props;\n\n    // There's an edge case where if the thing that triggered the error happens to *also* be in the resetKeys array,\n    // we'd end up resetting the error boundary immediately.\n    // This would likely trigger a second error to be thrown.\n    // So we make sure that we don't check the resetKeys on the first call of cDU after the error is set.\n\n    if (didCatch && prevState.error !== null && hasArrayChanged(prevProps.resetKeys, resetKeys)) {\n      var _this$props$onReset2, _this$props3;\n      (_this$props$onReset2 = (_this$props3 = this.props).onReset) === null || _this$props$onReset2 === void 0 ? void 0 : _this$props$onReset2.call(_this$props3, {\n        next: resetKeys,\n        prev: prevProps.resetKeys,\n        reason: \"keys\"\n      });\n      this.setState(initialState);\n    }\n  }\n  render() {\n    const {\n      children,\n      fallbackRender,\n      FallbackComponent,\n      fallback\n    } = this.props;\n    const {\n      didCatch,\n      error\n    } = this.state;\n    let childToRender = children;\n    if (didCatch) {\n      const props = {\n        error,\n        resetErrorBoundary: this.resetErrorBoundary\n      };\n      if (typeof fallbackRender === \"function\") {\n        childToRender = fallbackRender(props);\n      } else if (FallbackComponent) {\n        childToRender = createElement(FallbackComponent, props);\n      } else if (fallback !== undefined) {\n        childToRender = fallback;\n      } else {\n        throw error;\n      }\n    }\n    return createElement(ErrorBoundaryContext.Provider, {\n      value: {\n        didCatch,\n        error,\n        resetErrorBoundary: this.resetErrorBoundary\n      }\n    }, childToRender);\n  }\n}\nfunction hasArrayChanged() {\n  let a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return a.length !== b.length || a.some((item, index) => !Object.is(item, b[index]));\n}\n\nfunction assertErrorBoundaryContext(value) {\n  if (value == null || typeof value.didCatch !== \"boolean\" || typeof value.resetErrorBoundary !== \"function\") {\n    throw new Error(\"ErrorBoundaryContext not found\");\n  }\n}\n\nfunction useErrorBoundary() {\n  const context = useContext(ErrorBoundaryContext);\n  assertErrorBoundaryContext(context);\n  const [state, setState] = useState({\n    error: null,\n    hasError: false\n  });\n  const memoized = useMemo(() => ({\n    resetBoundary: () => {\n      context.resetErrorBoundary();\n      setState({\n        error: null,\n        hasError: false\n      });\n    },\n    showBoundary: error => setState({\n      error,\n      hasError: true\n    })\n  }), [context.resetErrorBoundary]);\n  if (state.hasError) {\n    throw state.error;\n  }\n  return memoized;\n}\n\nfunction withErrorBoundary(component, errorBoundaryProps) {\n  const Wrapped = forwardRef((props, ref) => createElement(ErrorBoundary, errorBoundaryProps, createElement(component, {\n    ...props,\n    ref\n  })));\n\n  // Format for display in DevTools\n  const name = component.displayName || component.name || \"Unknown\";\n  Wrapped.displayName = \"withErrorBoundary(\".concat(name, \")\");\n  return Wrapped;\n}\n\nexport { ErrorBoundary, ErrorBoundaryContext, useErrorBoundary, withErrorBoundary };\n"],"names":["props","_jsx","className","style","height","width","borderRadius","radius","withErrorBoundary","_ref","item","title","release_date","poster_path","vote_average","id","navigate","useNavigate","_jsxs","children","src","tmdbAPI","image500","alt","Date","getFullYear","Button","bgColor","onClick","FallbackComponent","MovieCardSkeleton","LoadingSkeleton","radios","MovieMeta","type","movieId","useParams","data","useSWR","getMovieMeta","fetcher","cast","length","slice","map","imageOriginal","profile_path","name","results","key","frameBorder","allow","allowFullScreen","Swiper","grabCursor","spaceBetween","slidesPerView","SwiperSlide","MovieCard","MovieDetailsPage","getMovieDetails","backdrop_path","genres","overview","backgroundImage","ErrorBoundaryContext","createContext","initialState","didCatch","error","ErrorBoundary","Component","constructor","super","this","resetErrorBoundary","bind","state","getDerivedStateFromError","_this$props$onReset","_this$props","_len","arguments","args","Array","_key","onReset","call","reason","setState","componentDidCatch","info","_this$props$onError","_this$props2","onError","componentDidUpdate","prevProps","prevState","resetKeys","_this$props$onReset2","_this$props3","a","undefined","b","some","index","Object","is","hasArrayChanged","next","prev","render","fallbackRender","fallback","childToRender","createElement","Provider","value","component","errorBoundaryProps","Wrapped","forwardRef","ref","displayName","concat"],"sourceRoot":""}