{"version":3,"file":"static/js/132.695e1cb6.chunk.js","mappings":"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","sources":["components/loading/LoadingSkeleton.js","components/movies/MovieCard.jsx","components/movies/MovieList.jsx","pages/HomePage.jsx","../node_modules/react-error-boundary/dist/react-error-boundary.esm.js"],"sourcesContent":["import React from \"react\";\n\nconst LoadingSkeleton = (props) => {\n  return (\n    <div\n      className={`skeleton ${props.className}`}\n      style={{\n        height: props.height,\n        width: props.width || \"100%\",\n        borderRadius: props.radius,\n      }}\n    ></div>\n  );\n};\n\nexport default LoadingSkeleton;\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Button from \"../button/Button\";\nimport { tmdbAPI } from \"../../config\";\nimport PropTypes from \"prop-types\";\nimport { withErrorBoundary } from \"react-error-boundary\";\nimport LoadingSkeleton from \"components/loading/LoadingSkeleton\";\n\nconst MovieCard = ({ item }) => {\n  const { title, release_date, poster_path, vote_average, id } = item;\n  const navigate = useNavigate();\n  return (\n    <div className=\"movie-card flex flex-col rounded-lg p-3 bg-slate-800 text-white h-full\">\n      <img\n        src={tmdbAPI.image500(poster_path)}\n        alt=\"\"\n        className=\"w-full h-[250px] object-cover rounded-lg mb-4\"\n      />\n      <div className=\"flex flex-col flex-1\">\n        <h3 className=\" font-bold text-xl mb-3\">{title}</h3>\n        <div className=\"flex items-center justify-between opacity-50 text-sm mb-8\">\n          <span>{new Date(release_date).getFullYear()}</span>\n          <span>{vote_average}</span>\n        </div>\n      </div>\n      <Button bgColor=\"secondary\" onClick={() => navigate(`/movie/${id}`)}>\n        Watch Now\n      </Button>\n    </div>\n  );\n};\n\nMovieCard.propTypes = {\n  item: PropTypes.shape({\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n    poster_path: PropTypes.string,\n    vote_average: PropTypes.number,\n    id: PropTypes.number,\n  }),\n};\n\nfunction FallbackComponent() {\n  return (\n    <p className=\"text-red-400 bg-red-50\">\n      Some thing went wrong with your components\n    </p>\n  );\n}\n\nexport default withErrorBoundary(MovieCard, {\n  FallbackComponent,\n});\n\nexport const MovieCardSkeleton = () => {\n  return (\n    <div className=\"movie-card flex flex-col rounded-lg p-3 bg-slate-800 text-white h-full\">\n      <LoadingSkeleton\n        width=\"100%\"\n        height=\"250px\"\n        radios=\"8px\"\n        className=\"mb-5\"\n      ></LoadingSkeleton>\n      <div className=\"flex flex-col flex-1\">\n        <h3 className=\" font-bold text-xl mb-3\">\n          <LoadingSkeleton width=\"100%\" height=\"20px\"></LoadingSkeleton>\n        </h3>\n        <div className=\"flex items-center justify-between opacity-50 text-sm mb-8\">\n          <span>\n            <LoadingSkeleton width=\"50px\" height=\"20px\"></LoadingSkeleton>\n          </span>\n          <span>\n            <LoadingSkeleton width=\"30px\" height=\"20px\"></LoadingSkeleton>\n          </span>\n        </div>\n        <LoadingSkeleton\n          width=\"100%\"\n          height=\"45px\"\n          radius=\"6px\"\n        ></LoadingSkeleton>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport MovieCard, { MovieCardSkeleton } from \"./MovieCard\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { fetcher, tmdbAPI } from \"../../config\";\nimport useSWR from \"swr\";\nimport PropTypes from \"prop-types\";\nimport { withErrorBoundary } from \"react-error-boundary\";\n\nconst MovieList = ({ type = \"now_playing\" }) => {\n  const { data, error, isLoading } = useSWR(\n    tmdbAPI.getMovieList(type),\n    fetcher\n  );\n  const movies = data?.results || [];\n  // console.log(movies);\n  return (\n    <div className=\"movie-list\">\n      {isLoading && (\n        <>\n          <Swiper grabCursor={\"true\"} spaceBetween={40} slidesPerView={\"auto\"}>\n            <SwiperSlide>\n              <MovieCardSkeleton></MovieCardSkeleton>\n            </SwiperSlide>\n            <SwiperSlide>\n              <MovieCardSkeleton></MovieCardSkeleton>\n            </SwiperSlide>\n            <SwiperSlide>\n              <MovieCardSkeleton></MovieCardSkeleton>\n            </SwiperSlide>\n            <SwiperSlide>\n              <MovieCardSkeleton></MovieCardSkeleton>\n            </SwiperSlide>\n          </Swiper>\n        </>\n      )}\n      {!isLoading && (\n        <Swiper grabCursor={\"true\"} spaceBetween={40} slidesPerView={\"auto\"}>\n          {movies.length > 0 &&\n            movies.map((item) => (\n              <SwiperSlide key={item.id}>\n                <MovieCard item={item}></MovieCard>\n              </SwiperSlide>\n            ))}\n        </Swiper>\n      )}\n    </div>\n  );\n};\n\nMovieList.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n\nfunction FallbackComponent() {\n  return (\n    <p className=\"text-red-400 bg-red-50\">\n      Some thing went wrong with your components\n    </p>\n  );\n}\n\nexport default withErrorBoundary(MovieList, {\n  FallbackComponent,\n});\n","import React, { Fragment } from \"react\";\nimport MovieList from \"../components/movies/MovieList\";\n\nconst HomePage = () => {\n  return (\n    <Fragment>\n      <section className=\"movies-layout page-container pb-20\">\n        <h2 className=\"capitalize text-white mb-10 font-bold text-3xl\">\n          Now Playing\n        </h2>\n        <MovieList></MovieList>\n      </section>\n      <section className=\"movies-layout page-container pb-20\">\n        <h2 className=\"capitalize text-white mb-10 font-bold text-3xl\">\n          Top Rated\n        </h2>\n        <MovieList type=\"top_rated\"></MovieList>\n      </section>\n      <section className=\"movies-layout page-container pb-10\">\n        <h2 className=\"capitalize text-white mb-10 font-bold text-3xl\">\n          Trending\n        </h2>\n        <MovieList type=\"popular\"></MovieList>\n      </section>\n    </Fragment>\n  );\n};\n\nexport default HomePage;\n","'use client';\nimport { createContext, Component, createElement, useContext, useState, useMemo, forwardRef } from 'react';\n\nconst ErrorBoundaryContext = createContext(null);\n\nconst initialState = {\n  didCatch: false,\n  error: null\n};\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.resetErrorBoundary = this.resetErrorBoundary.bind(this);\n    this.state = initialState;\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      didCatch: true,\n      error\n    };\n  }\n  resetErrorBoundary() {\n    const {\n      error\n    } = this.state;\n    if (error !== null) {\n      var _this$props$onReset, _this$props;\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      (_this$props$onReset = (_this$props = this.props).onReset) === null || _this$props$onReset === void 0 ? void 0 : _this$props$onReset.call(_this$props, {\n        args,\n        reason: \"imperative-api\"\n      });\n      this.setState(initialState);\n    }\n  }\n  componentDidCatch(error, info) {\n    var _this$props$onError, _this$props2;\n    (_this$props$onError = (_this$props2 = this.props).onError) === null || _this$props$onError === void 0 ? void 0 : _this$props$onError.call(_this$props2, error, info);\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      didCatch\n    } = this.state;\n    const {\n      resetKeys\n    } = this.props;\n\n    // There's an edge case where if the thing that triggered the error happens to *also* be in the resetKeys array,\n    // we'd end up resetting the error boundary immediately.\n    // This would likely trigger a second error to be thrown.\n    // So we make sure that we don't check the resetKeys on the first call of cDU after the error is set.\n\n    if (didCatch && prevState.error !== null && hasArrayChanged(prevProps.resetKeys, resetKeys)) {\n      var _this$props$onReset2, _this$props3;\n      (_this$props$onReset2 = (_this$props3 = this.props).onReset) === null || _this$props$onReset2 === void 0 ? void 0 : _this$props$onReset2.call(_this$props3, {\n        next: resetKeys,\n        prev: prevProps.resetKeys,\n        reason: \"keys\"\n      });\n      this.setState(initialState);\n    }\n  }\n  render() {\n    const {\n      children,\n      fallbackRender,\n      FallbackComponent,\n      fallback\n    } = this.props;\n    const {\n      didCatch,\n      error\n    } = this.state;\n    let childToRender = children;\n    if (didCatch) {\n      const props = {\n        error,\n        resetErrorBoundary: this.resetErrorBoundary\n      };\n      if (typeof fallbackRender === \"function\") {\n        childToRender = fallbackRender(props);\n      } else if (FallbackComponent) {\n        childToRender = createElement(FallbackComponent, props);\n      } else if (fallback !== undefined) {\n        childToRender = fallback;\n      } else {\n        throw error;\n      }\n    }\n    return createElement(ErrorBoundaryContext.Provider, {\n      value: {\n        didCatch,\n        error,\n        resetErrorBoundary: this.resetErrorBoundary\n      }\n    }, childToRender);\n  }\n}\nfunction hasArrayChanged() {\n  let a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return a.length !== b.length || a.some((item, index) => !Object.is(item, b[index]));\n}\n\nfunction assertErrorBoundaryContext(value) {\n  if (value == null || typeof value.didCatch !== \"boolean\" || typeof value.resetErrorBoundary !== \"function\") {\n    throw new Error(\"ErrorBoundaryContext not found\");\n  }\n}\n\nfunction useErrorBoundary() {\n  const context = useContext(ErrorBoundaryContext);\n  assertErrorBoundaryContext(context);\n  const [state, setState] = useState({\n    error: null,\n    hasError: false\n  });\n  const memoized = useMemo(() => ({\n    resetBoundary: () => {\n      context.resetErrorBoundary();\n      setState({\n        error: null,\n        hasError: false\n      });\n    },\n    showBoundary: error => setState({\n      error,\n      hasError: true\n    })\n  }), [context.resetErrorBoundary]);\n  if (state.hasError) {\n    throw state.error;\n  }\n  return memoized;\n}\n\nfunction withErrorBoundary(component, errorBoundaryProps) {\n  const Wrapped = forwardRef((props, ref) => createElement(ErrorBoundary, errorBoundaryProps, createElement(component, {\n    ...props,\n    ref\n  })));\n\n  // Format for display in DevTools\n  const name = component.displayName || component.name || \"Unknown\";\n  Wrapped.displayName = \"withErrorBoundary(\".concat(name, \")\");\n  return Wrapped;\n}\n\nexport { ErrorBoundary, ErrorBoundaryContext, useErrorBoundary, withErrorBoundary };\n"],"names":["props","_jsx","className","style","height","width","borderRadius","radius","withErrorBoundary","_ref","item","title","release_date","poster_path","vote_average","id","navigate","useNavigate","_jsxs","children","src","tmdbAPI","image500","alt","Date","getFullYear","Button","bgColor","onClick","FallbackComponent","MovieCardSkeleton","LoadingSkeleton","radios","type","data","error","isLoading","useSWR","getMovieList","fetcher","movies","results","_Fragment","Swiper","grabCursor","spaceBetween","slidesPerView","SwiperSlide","length","map","MovieCard","HomePage","Fragment","MovieList","ErrorBoundaryContext","createContext","initialState","didCatch","ErrorBoundary","Component","constructor","super","this","resetErrorBoundary","bind","state","getDerivedStateFromError","_this$props$onReset","_this$props","_len","arguments","args","Array","_key","onReset","call","reason","setState","componentDidCatch","info","_this$props$onError","_this$props2","onError","componentDidUpdate","prevProps","prevState","resetKeys","_this$props$onReset2","_this$props3","a","undefined","b","some","index","Object","is","hasArrayChanged","next","prev","render","fallbackRender","fallback","childToRender","createElement","Provider","value","component","errorBoundaryProps","Wrapped","forwardRef","ref","name","displayName","concat"],"sourceRoot":""}